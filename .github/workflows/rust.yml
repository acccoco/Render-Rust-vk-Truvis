name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  LLVM_VERSION: 15.0.7

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup cmake
        uses: lukka/get-cmake@latest

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}
          directory: ${{ runner.temp }}/llvm

      - name: Add LLVM to PATH
        run: |
          echo "添加 LLVM bin 目录到 PATH"
          echo "${{ runner.temp }}\llvm\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

          # 设置 LLVM_HOME 环境变量
          echo "LLVM_HOME=${{ runner.temp }}\llvm" | Out-File -FilePath $env:GITHUB_ENV -Append

          # 验证 libclang.dll 是否存在
          if (Test-Path "${{ runner.temp }}\llvm\bin\libclang.dll") {
            echo "clang.dll 已找到：${{ runner.temp }}\llvm\bin\libclang.dll"
          } else {
            echo "错误：未找到 libclang.dll"
            exit 1
          }

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat

      # - name: Install assimp via vcpkg
      #   run: |
      #     .\vcpkg\vcpkg.exe install assimp:x64-windows

      - name: Build
        run: cargo build --verbose
        env:
          VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
          LLVM_HOME: ${{ runner.temp }}/llvm

      - name: Run tests
        run: cargo test --verbose
        env:
          VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
          LLVM_HOME: ${{ runner.temp }}/llvm
