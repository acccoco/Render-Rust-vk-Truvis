#pragma once
#include "ptr.slangi"

/// 单个点光源
struct PointLight
{
    float3 pos;
    float _pos_padding;

    float3 color;
    float _color_padding;

#ifdef __SLANG__
    float3 phong_light(float3 camera_pos, float3 obj_pos, float3 obj_normal, float4 object_color)
    {
        const float3 light_dir = normalize(obj_pos - pos);
        const float3 view_dir = normalize(obj_pos - camera_pos);
        const float3 reflect_dir = normalize(reflect(light_dir, obj_normal));
        const float3 halfway = -normalize(light_dir + view_dir);

        const float diffuse_coef = max(0.0, dot(-light_dir, obj_normal));
        const float specular_coef = pow(max(0.0, dot(obj_normal, halfway)), 8.0);

        const float const_term = 1.0f;
        const float linear_term = 0.09f;
        const float quadratic_term = 0.032f;
        const float distance = length(pos - obj_pos);

        // FIXME attenuation
        const float light_attenuation = 10.0 / (const_term + linear_term * distance + quadratic_term * distance * distance);

        const float3 diffuse_color = object_color.rgb * diffuse_coef * color;
        const float3 specular_color = float3(1.f, 1.f, 1.f) * specular_coef;

        const float3 color = (diffuse_color + specular_color) * light_attenuation;
        return color;
    }

#endif
};

/// 单个 spot light
struct SpotLight
{
    float3 pos;
    float inner_angle;

    float3 color;
    float outer_angle;

    float3 dir;
    float _dir_padding;
};

