#pragma once
#include "common.slangi"
#include "random.slangi"

struct Sample
{

    /// 半球方向上随机采样
    static float3 sampling_hemisphere(inout uint seed)
    {

        float r1 = Random::rnd(seed);
        float r2 = Random::rnd(seed);
        float sq = sqrt(r1);

        // TODO 这是不是有问题啊
        float3 direction = float3(cos(2 * M_PI * r2) * sq, sin(2 * M_PI * r2) * sq, sqrt(1. - r1));
        return direction;
    }

    /// 根据输入的法线，创建一个局部坐标系
    /// 右手系，基向量为：(tangent, bitangent, normal)
    static void create_local_coord(in float3 normal, out float3 tangent, out float3 bitangent)
    {
        bitangent = get_perpendicular_vector(normal);
        tangent = cross(bitangent, normal);
    }

    /// 获得垂直于输入向量的单位向量
    ///    (from "Efficient Construction of Perpendicular Vectors Without Branching")
    static float3 get_perpendicular_vector(float3 u)
    {
        float3 a = abs(u);
        uint xm = ((a.x - a.y) < 0 && (a.x - a.z) < 0) ? 1 : 0;
        uint ym = (a.y - a.z) < 0 ? (1 ^ xm) : 0;
        uint zm = 1 ^ (xm | ym);
        return normalize(cross(u, float3(xm, ym, zm)));
    }
};
